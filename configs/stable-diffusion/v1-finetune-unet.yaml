model:
  base_lr: 1e-6
  weight_decay: 0.0

  target: ldm.models.diffusion.ddpm.LatentDiffusion
  params:
    # linear_start/linear_end: params for linear beta schedule.
    beta_schedule: linear
    linear_start: 0.00085
    linear_end: 0.0120
    timesteps: 1000
    first_stage_key: image
    cond_stage_key: caption
    channels: 4
    # Since we don't want to train the embedding manager, we set embedding_manager_trainable = False.
    embedding_manager_trainable: false
    monitor: train/loss
    scale_factor: 0.18215
    unfreeze_unet: true
    # Recommended in https://github.com/TheLastBen/fast-stable-diffusion/issues/1609
    # But Prodigy will ignore any unet_lr setting.
    unet_lr: 1e-6
    use_fp_trick:                     True
    unet_teacher_types:               ['unet_ensemble']
    # extra_unet_dirpaths and unet_weights_in_ensemble may be overriden in main.py.
    extra_unet_dirpaths:                 ['models/ensemble/sd15-unet', 
                                          'models/ensemble/rv4-unet', 
                                          'models/ensemble/ar18-unet']
    unet_weights_in_ensemble:                     [4.0, 2.0, 1.0]
    # unet_distill_iter_gap determines the percentage of unet_distill_iter among do_normal_recon iters.
    # unet_distill_iter_gap = 1 means at 100% of the non-compositional iters, 
    # we use the unet teacher's output as the target (do_unet_distill).
    # at the other 50%, we use the original image as the target (do_normal_recon).
    unet_distill_iter_gap:            1

    # typical delta reg loss: 0.85, * weight -> 1.7e-4
    prompt_emb_delta_reg_weight:      1e-4

    # AdamW, AdamW8bit, Adam8bit, NAdam, Prodigy
    optimizer_type:           CAdamW 
    grad_clip:  0.5
    adam_config:
      betas:    [0.9,  0.993]  # 0.993 corresponds to a half life of 99. 0.999 corresponds to a half life of 693.        
      scheduler_config:
        target: ldm.modules.lr_scheduler.LambdaWarmUpCosineScheduler
        params:
          verbosity_interval: 0
          warm_up_steps: 500
          lr_start:      0.01
          lr_max:        1.0
          lr_min:        0.1

    prodigy_config:
      betas:    [0.985, 0.993]  # Faster to converge than zs_betas.
      zs_betas: [0.9,  0.999]   # Slower to converge than betas.
      d_coef:           2
      warm_up_steps:    500
      # 1 cycle after the warm_up_steps.
      # Each cycle is linearly decreasing the LR from base_lr to 0.09*base.
      scheduler_cycles: 1 #2
      # CyclicLR, CosineAnnealingWarmRestarts, Linear. 
      # Linear or CosineAnnealingWarmRestarts doesn't work well.
      scheduler_type: 'Linear' #'CyclicLR'
      
    personalization_config:
      target: ldm.modules.embedding_manager.EmbeddingManager
      params:
        subject_strings:          ['z']
        subj_name_to_cls_delta_string: { 'z': "person", 'rand_id_to_img_prompt': 'person' }
        training_perturb_std_range:  [ 0.05, 0.1 ]
        # probs for recon_iter and compos_distill_iter, respectively
        training_perturb_prob:   { 'recon_iter':            0.6, 
                                   'unet_distill_iter':     0.4,
                                   'compos_distill_iter':   0.4 }
        adaface_ckpt_paths:        null
        # Load the ada components from these placeholders in the checkpoint.

    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        in_channels: 4
        out_channels: 4
        model_channels: 320
        attention_resolutions: [ 4, 2, 1 ]
        num_res_blocks: 2
        channel_mult: [ 1, 2, 4, 4 ]
        num_heads: 8
        use_spatial_transformer: True
        transformer_depth: 1
        context_dim: 768
        use_checkpoint: True
        legacy: False
        
    first_stage_config:
      target: ldm.models.autoencoder.AutoencoderKL
      params:
        embed_dim: 4
        monitor: train/loss_recon
        ddconfig:
          double_z: true
          z_channels: 4
          resolution: 512
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 2
          - 4
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
          #attn_type: 'none'

        lossconfig:
          target: torch.nn.Identity

    cond_stage_config:
      target: ldm.modules.encoders.modules.FrozenCLIPEmbedder
      params:
        last_layers_skip_weights: [0.5, 0.5]

data:
  target: main.DataModuleFromConfig
  params:
    batch_size:  1
    num_workers: 4
    wrap: false
    max_steps: 60000
    train:
      target: ldm.data.personalized.PersonalizedBase
      params:
        size: 512       # Image resolution
        set_name: train
        repeats: 100
        verbose: false

lightning:
  modelcheckpoint:
    params:
      every_n_train_steps: 250

  trainer:
    benchmark: True
    max_steps: 60000
    num_sanity_val_steps: 0
    limit_val_batches: 0  # Disable doing validation.
    deterministic: False
    replace_sampler_ddp: False
    accumulate_grad_batches: 8
    # clip gradients' global norm to <=0.5 using gradient_clip_algorithm='norm' by default    
    gradient_clip_val: 0.5
   
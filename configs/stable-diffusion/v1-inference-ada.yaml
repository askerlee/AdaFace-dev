model:
  base_lr: 1.0e-04
  target: ldm.models.diffusion.ddpm.LatentDiffusion
  params:
    linear_start: 0.00085
    linear_end: 0.0120
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    # first_stage_key: used as batch[key] in DDPM.get_input()
    first_stage_key: "jpg"
    cond_stage_key: "txt"
    image_size: 64
    channels: 4
    # cond_stage_trainable = False disables the training data loading in LatentDiffusion.forward().
    cond_stage_trainable: false   
    embedding_manager_trainable: false
    conditioning_key: crossattn
    monitor: train/loss
    scale_factor: 0.18215
    use_layerwise_embedding: True
    p_unet_distill_iter: 0

    personalization_config:
      target: ldm.modules.embedding_manager.EmbeddingManager
      params:
        subject_strings:     ["z"]
        background_strings:  ["y"]
        # The number of initializer words is probably different from that used in fine-tuning.
        # But it doesn't matter, as EmbeddingManager.load() will completely replace self.string_to_static_embedder_dict,
        # including the wrongly initialized LoraEmbedding object(s).
        initializer_strings: [ "person", "unknown" ]
        num_vectors_per_subj_token: 16
        use_layerwise_embedding: True

    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      #target: ldm.models.diffusion.ddpm.Arc2FaceTeacher
      params:
        image_size: 32 # unused
        in_channels: 4
        out_channels: 4
        model_channels: 320
        attention_resolutions: [ 4, 2, 1 ]
        num_res_blocks: 2
        channel_mult: [ 1, 2, 4, 4 ]
        num_heads: 8
        use_spatial_transformer: True
        transformer_depth: 1
        context_dim: 768
        use_checkpoint: True
        legacy: False

    first_stage_config:
      target: ldm.models.autoencoder.AutoencoderKL
      params:
        embed_dim: 4
        monitor: train/loss_recon
        ddconfig:
          double_z: true
          z_channels: 4
          resolution: 256
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 2
          - 4
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
          #attn_type: 'none'

        lossconfig:
          target: torch.nn.Identity

    cond_stage_config:
      target: ldm.modules.encoders.modules.FrozenCLIPEmbedder
      params:
        last_layers_skip_weights: [0.5, 0.5]
